{
	"name": "B9F36BCF530F3D6B5C9CF39D2E260A99 (Dark)",
	"type": "dark",
	"colors": {
		// tabs
    "tab.border": "#0d0d0d",
		"tab.activeForeground": "#A9A9A9",
    "tab.activeBackground": "#1a1a1a", // active tab
    "tab.inactiveBackground": "#262626", // inactive tab
    "editorGroupHeader.tabsBackground": "#262626", // panel background
		"editorGroupHeader.noTabsBackground": "#262626",
    "editorGroup.border": "#0d0d0d", // line separating editor groups
    "editorGroupHeader.border": "#0d0d0d", // line separating tab breadcamp
    "breadcrumb.background": "#1a1a1a",
    "breadcrumb.foreground": "#7A7A7A",
    "breadcrumbPicker.background": "#1a1a1a",
    "breadcrumb.focusForeground": "#7A7A7A",

    // statusbar
    "statusBar.border": "#0d0d0d",
    "statusBar.background": "#262626",
    "statusBar.foreground": "#7A7A7A",
		"statusBar.noFolderBackground": "#262626",
    "statusBar.noFolderForeground": "#7A7A7A",
    "statusBarItem.remoteBackground": "#262626",
		"debugToolBar.background": "#0d0d0d",
    "statusBar.debuggingBackground": "#0d0d0d",
    "statusBar.debuggingForeground": "#f9690e",

    // activity bar / sidebar
    "activityBar.background": "#262626",
    "activityBar.border": "#0d0d0d",
    "sideBar.border": "#0d0d0d",
    "sideBarSectionHeader.background": "#1a1a1a",
    "sideBarSectionHeader.border": "#0d0d0d",
    "activityBarBadge.background": "#406098",
    "activityBar.foreground": "#7A7A7A",
    "activityBar.inactiveForeground": "#525252",
    "activityBar.activeBorder": "#525252", // highlight for selected item

    // panels
    "panel.border": "#0d0d0d",
    "sideBar.background": "#1a1a1a", // left panel background
    "panel.background": "#1a1a1a", // right panel background
    "panelTitle.activeBorder": "#7A7A7A", // active tab underline in right panel
    "focusBorder": "#7A7A7A",

		// editor
		"editor.background": "#191c24",
    "editorPane.background": "#1a1a1a",
    "editorGroup.emptyBackground": "#262626",
		"editorLineNumber.activeForeground": "#516a81",
		"editorLineNumber.foreground": "#3C4867",
		"editor.foreground": "#A9A9A9",
		"editorBracketMatch.border": "#22b455",
		"editorIndentGuide.activeBackground": "#393f51",
    "editorIndentGuide.background": "#242833",

    // gutter
		"editor.lineHighlightBackground": "#0d0d0d",
    "editor.lineHighlightBorder": "#0d0d0d",
    "editorGutter.commentRangeForeground":"#31375E",
    "editorGutter.foldingControlForeground":"#ff0000",
    // "editorGutter.modifiedBackground":"#ff0000",
    // "editorGutter.addedBackground": "#ff0000",
    // "editorGutter.deletedBackground": "#ff0000",

		// palette
		"list.focusForeground": "#D2D7D3",
		// "list.focusBackground": "#000036",
		// "list.hoverForeground": "#A9A9A9",
		// "list.hoverBackground": "#000036",
		// "quickInput.foreground": "#A9A9A9",
		// "quickInput.background": "#000036",

		// integrated terminal // TODO
		"terminal.foreground": "#A9A9A9",
		"terminal.ansiBrightWhite": "#D2D7D3",
		"terminal.ansiWhite": "#939393",
		"terminal.ansiBrightBlack": "#7A7A7A",
		"terminal.ansiBlack": "#191c24",
		"terminal.ansiBlue": "#638BB3",
		"terminal.ansiBrightBlue": "#638BB3",
		"terminal.ansiCyan": "#1BA39C",
		"terminal.ansiBrightCyan": "#1BA39C",
		"terminal.ansiGreen": "#24A159",
		"terminal.ansiBrightGreen": "#24A159",
		"terminal.ansiMagenta": "#B381B3",
		"terminal.ansiBrightMagenta": "#B381B3",
		"terminal.ansiRed": "#A10502",
		"terminal.ansiBrightRed": "#E74C3C",
		"terminal.ansiYellow": "#F2A127",
		"terminal.ansiBrightYellow": "#F2A127",
		"terminal.selectionBackground": "#22b455",

		"terminalCursor.background": "#000036",
		"terminalCursor.foreground": "#22b455",

		"editorCursor.foreground": "#22b455",
		"editorCursor.background": "#000036",
	},
	"semanticHighlighting": true,
	"semanticTokenColors": {
		"type": {
			"fontStyle": "italic",
			"foreground": "#65A665"
		},
		"type.defaultLibrary": "#65A665",
		"type.declaration": "#2ECC32",
		"interface": {
			"fontStyle": "italic",
			"foreground": "#65A665"
		},
		"interface.defaultLibrary": "#65A665",
		"interface.declaration": "#2ECC32",

		"class.declaration": "#00FF7F",
		// no member because objects of collision with objects

		"enum": {
			"foreground": "#86E2D5", // constant
		},

		"*.local": "#C9874F",
		"*.readonly": "#5BC0D7",
		"*.readonly.declaration": "#81CFE0",
		"*.readonly.local": "#D2D7D3",
		"*.readonly.declaration.local": "#D2D7D3",
		"*.readonly.defaultLibrary": "#ADD8E6",
		"*.defaultLibrary": "#ADD8E6",
		// "function.readonly": "#34B9DB",
		// "member.defaultLibrary": "#009FD4",
  },
	"tokenColors": [
		{
			"name": "Comment",
			"scope": [
				"comment",
				"punctuation.definition.comment"
			],
			"settings": {
        "foreground": "#F1F227",
			}
		},
		{
			"name": "shared variable / state", // enemy of the state
			"scope": [
				"variable.other.readwrite",
			],
			"settings": {
        "foreground": "#FF4500",
			}
		},
		{
			"name": "Keywords",
			"scope": [
				"keyword",
				"storage.type",
				"storage.modifier",
			],
			"settings": {
				"foreground": "#ABB7B7"
			}
		},
		{
			"name": "return, export, function",
			"scope": [
				"keyword.control.flow",
				"keyword.control.module",
				"meta.function storage.type.function",
				"keyword.control.export",
			],
			"settings": {
				"foreground": "#FC6399",
				// "fontStyle": "italic"
			}
		},
		{
			"name": "switch case, conditions, if else, ternary, logical",
			"scope": [
				"keyword.control.switch",
				"keyword.control.conditional",
				"keyword.operator.ternary",
				"keyword.operator.logical",
				"keyword.operator.comparison"
			],
			"settings": {
				"foreground": "#FF7F50",
			}
		},
		{
			"name": "ternary",
			"scope": [
				"keyword.operator.ternary",
			],
			"settings": {
				"foreground": "#ABB7B7",
			}
		},
		{
			"name": "Imports",
			"scope": [
				"meta.import string.quoted",
				"meta.import string.quoted punctuation",
				"meta.import keyword.control.as",
				"keyword.control.module.reference",
			],
			"settings": {
				"foreground": "#A9A9A9",
			}
		},
		{
			"name": "Imports > alias",
			"scope": [
				"variable.other.readwrite.alias",
			],
			"settings": {
				"foreground": "#E8E8E8",
			}
		},
		{
			"name": "Number, Constant, Embedded, Strings",
			"scope": [
				"string",
				"string punctuation",
				"constant.numeric",
				"constant.language",
				"constant.character",
				"constant.escape",
				"keyword.other.unit",
				"keyword.other",
			],
			"settings": {
				"foreground": "#AEA8D3"
			}
		},
    {
			// rest of definitions not covered by semantic
			"name": "readonly – constant values",
			"scope": [
				"variable.other.constant.property",
				"meta.object.member variable.other.constant",
				"variable.other.constant",
			],
			"settings": {
				"foreground": "#E4F1FE"
			}
		},
		{
			"name": "function def, arrow function", // todo handle function something ()
			"scope": [
				"meta.function entity.name.function",
				"storage.type.function.arrow",
				"meta.definition.function entity.name.function",
				"meta.function punctuation.definition meta.brace",
				"meta.function meta.brace.curly",
				"meta.arrow meta.parameters punctuation.definition.parameters.begin",
				"meta.arrow meta.parameters punctuation.definition.parameters.end",
			],
			"settings": {
				"foreground": "#81CFE0",
			}
    },
    {
			"name": "function params",
			"scope": [
				"variable.parameter",
				"meta.function.parameters",
				"meta.function.parameters variable.other.readwrite",
				"meta.function.parameters keyword.operator.spread",
				"meta.jsx meta.tag meta.embedded.expression meta.arrow meta.parameters",
				"meta.jsx meta.tag meta.embedded.expression meta.arrow meta.parameters punctuation",
			],
			"settings": {
				"foreground": "#D2D7D3",
			}
    },
    {
      "name": "function call",
			"scope": [
				"meta.function-call entity.name.function",
				"meta.function-call.with-arguments variable.other.readwrite",
				"meta.function-call.with-arguments entity.name.function",
			],
			"settings": {
				"foreground": "#BEBEBE",
			}
		},
		{
      "name": "method call, misc objects",
			"scope": [
				"variable.other.readwrite",
				"variable.other.object",
				"meta.method-call.with-arguments variable.other.readwrite",
			],
			"settings": {
				"foreground": "#F4B350",
			}
		},
		{
			"name": "Type Definition – operators",
			"scope": [
				"meta.type.declaration keyword.operator.assignment",
				"meta.type punctuation",
				"meta.type.annotation",
				"meta.type meta.brace",
				"meta.return.type.arrow keyword.operator",
				"keyword.operator.type",
			],
			"settings": {
				"foreground": "#28A228",
				"fontStyle": ""
			}
		},
		{
			"name": "Type keywords",
			"scope": [
				"meta.type storage.type",
				"keyword.control.as",
				"keyword.operator.expression.keyof",
				"meta.field.declaration keyword.operator.optional",
				"meta.type.declaration meta.object.type keyword.operator.optional",
			],
			"settings": {
				"fontStyle": "italic",
				"foreground": "#2ECC32"
			}
		},
		{
			"name": "Type Definition", // rest of definitions not covered by semantic
			"scope": [
				"support.type.primitive",
				"support.type.builtin",
				"meta.type.annotation support.type.builtin",
				"meta.type.annotation meta.type.function",
				"meta.type.annotation meta.type.function punctuation.definition",
				"meta.type.declaration string",
			],
			"settings": {
				"fontStyle": "italic",
				"foreground": "#65A665"
			}
		},
		{
			"name": "Type Definition - object keys,",
			"scope": [
				"meta.interface meta.field.declaration meta.definition.property entity",
				"meta.type.annotation meta.field.declaration meta.definition.property variable",
				"meta.type.annotation meta.field.declaration meta.definition.property entity",
				"meta.type.annotation meta.field.declaration meta.definition.property",
				"meta.type.declaration meta.object.type meta.definition.property variable",
				"meta.type.declaration meta.object.type meta.indexer.declaration variable",
				"meta.type.declaration variable.other.property",
				"meta.object.flowtype variable.other.readwrite",
			],
			"settings": {
				"fontStyle": "italic",
				"foreground": "#8BB82D",
			}
		},
		{
			"name": "Class definition, this",
			"scope": [
				"variable.language.this",
			],
			"settings": {
				"foreground": "#66CC99",
			}
		},
		{
			"name": "Class methods",
			"scope": [
				"meta.class meta.method.declaration meta.definition.method entity.name.function",
				"meta.class meta.method.declaration meta.parameters punctuation",
				"meta.class meta.field.declaration meta.definition.property entity",
				"meta.class meta.field.declaration meta.definition.property variable",
				"variable.other.class",
			],
			"settings": {
				"foreground": "#00D46A",
			}
		},
		{
			"name": "json keys, object literals",
			"scope": [
				"meta.object-literal.key",
				"meta.object-literal.key meta.brace",
				"meta.object-literal.key constant.numeric.decimal",
				"meta.object-literal.key string.quoted",
				"meta.object-literal.key string.quoted punctuation.definition.string",
				"meta.objectliteral punctuation.definition.block", // changed to
        "meta.block meta.objectliteral punctuation.definition.block",
				"constant.other.object string",
			],
			"settings": {
				"foreground": "#B381B3", //"#87D37C"
			}
		},
		{
			"name": "json type keys",
			"scope": [
				"support.type.property-name",
				"support.type.property-name punctuation",
			],
			"settings": {
				"foreground": "#ABB7B7",
			}
		},
		{
			"name": "json file keys",
			"scope": [
				"source.json support.type.property-name",
				"source.json support.type.property-name punctuation",
			],
			"settings": {
				"foreground": "#D2D7D3",
			}
		},
		{
			"name": "json file values",
			"scope": [
				"source.json string",
				"source.json constant.language",
			],
			"settings": {
				"foreground": "#BE90D4",
			}
		},
		{
			"name": "operators",
			"scope": [
				"meta.structure.dictionary",
			],
			"settings": {
				"foreground": "#808080",
			}
		},
		{
			"name": "HTML Tags, react elements",
			"scope": [
				"meta.tag entity.name.tag support.class.component",
			],
			"settings": {
				"foreground": "#8BB82D"
			}
    },
    {
			"name": "React - Attributes",
			"scope": [
				"meta.tag entity.other.attribute-name",
			],
			"settings": {
				"foreground": "#AAA789"
			}
		},
		{
			"name": "React - symbols",
			"scope": [
				"meta.tag.attributes keyword.operator.assignment",
				"meta.tag.attributes punctuation.section.embedded"
			],
			"settings": {
				"foreground": "#696969"
			}
		},
		{
			"name": "markdown > text",
			"scope": [
				"text.html.markdown",
				"text.html.markdown punctuation.definition.list",
			],
			"settings": {
				"foreground": "#D2D7D3",
			}
		},
		{
			"name": "markdown > heading",
			"scope": [
				"text.html.markdown heading"
			],
			"settings": {
				"foreground": "#E8E8E8",
				// "fontStyle": "bold",
			}
		},
		{
			"name": "markdown > bold",
			"scope": [
				"text.html.markdown markup.bold.markdown"
			],
			"settings": {
				"fontStyle": "bold",
			}
		},
		{
			"name": "markdown > bold",
			"scope": [
				"text.html.markdown markup.italic.markdown"
			],
			"settings": {
				"fontStyle": "italic",
			}
		},
		{
			"name": "markdown > code",
			"scope": [
				"text.html.markdown markup.inline.raw",
				"text.html.markdown markup.fenced_code",
			],
			"settings": {
				"foreground": "#A9A9A9",
				// "foreground": "#BE90D4",
			}
		},
		{
			"name": "markdown > punctuation, actual link",
			"scope": [
				"text.html.markdown punctuation",
				"text.html.markdown markup.underline.link"
			],
			"settings": {
				"foreground": "#A9A9A9",
			}
		},
		{
			"name": "markdown > links",
			"scope": [
				"text.html.markdown string.other.link",
			],
			"settings": {
				"foreground": "#5BC0D7",
			}
		},
		{
			"name": "elixir / string, numeric, data",
			"scope": [
				"source.elixir string",
				"source.elixir string punctuation",
				"source.elixir constant.numeric"
			],
			"settings": {
				"foreground": "#3FC380",
			}
		},
		{
			"name": "elixir / atom",
			"scope": [
				"source.elixir constant.language.symbol",
			],
			"settings": {
				"foreground": "#8BB82D",
			}
		},
		{
			"name": "elixir / operators",
			"scope": [
				"source.elixir keyword.operator.assignment",
				"source.elixir keyword.operator.arithmetic",
				"source.elixir keyword.operator",
			],
			"settings": {
				"foreground": "#AEA8D3",
			}
		},
		{
			"name": "elixir / keywords",
			"scope": [
				"source.elixir keyword",
				"source.elixir keyword.control.module",
				"source.elixir keyword.other.special-method"
			],
			"settings": {
				"foreground": "#B381B3",
			}
		},
		{
			"name": "elixir / module name",
			"scope": [
				"source.elixir entity.name",
				"source.elixir meta.function entity.name.function",
			],
			"settings": {
				"foreground": "#FFD700",
			}
		},
		{
			"name": "elixir / module use",
			"scope": [
				"source.elixir variable.other.constant",
			],
			"settings": {
				"foreground": "#6BB9F0",
			},
		}, 
		{
			"name": "elixir / function call",
			"scope": [
				"source.elixir entity.name.function-call",
			],
			"settings": {
				"foreground": "#81CFE0",
			},
		},
		{
			"name": "elixir / foreground",
			"scope": [
				"source.elixir",
				"source.elixir comment.wildcard",
				"source.elixir comment",
				"source.elixir punctuation.definition.comment"
			],
			"settings": {
				"foreground": "#D4D4D4",
			}
		},
		{
			"name": "elixir / comment",
			"scope": [
				"source.elixir comment",
				"source.elixir punctuation.definition.comment"
			],
			"settings": {
				"foreground": "#E7903C",
			}
		},
		{
			"name": "elixir / secondary",
			"scope": [
				"source.elixir punctuation",
				"source.elixir comment.unused"
			],
			"settings": {
				"foreground": "#939393",
			}
		},
		{
			"name": "elixir / module attribute",
			"scope": [
				// "source.elixir variable.other.readwrite.module",
				"source.elixir variable.other.readwrite",
				"source.elixir variable.other.readwrite punctuation",
			],
			"settings": {
				"foreground": "#DADFE1",
			}
		},
	]
}
